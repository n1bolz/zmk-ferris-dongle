#include "keys_ru.h"
#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/outputs.h>

&mt {
    quick-tap-ms = <200>;
    flavor = "tap-preferred";
    require-prior-idle-ms = <125>;
};

/ {
    behaviors {
        hml: home_row_mod_left {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            flavor = "balanced";
            require-prior-idle-ms = <150>;
            tapping-term-ms = <280>;
            quick-tap-ms = <175>;
            bindings = <&kp>, <&kp>;

            hold-trigger-key-positions = <5 6 7 8 9 15 16 17 18 19 25 26 27 28 29 33 34 35>;
            hold-trigger-on-release;
        };

        hmr: home_row_mod_right {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            flavor = "balanced";
            require-prior-idle-ms = <150>;
            tapping-term-ms = <280>;
            quick-tap-ms = <175>;
            bindings = <&kp>, <&kp>;

            hold-trigger-key-positions = <0 1 2 3 4 10 11 12 13 14 20 21 22 23 24 30 31>;
            hold-trigger-on-release;
        };

        numl: numl {
            compatible = "zmk,behavior-hold-tap";
            label = "NUML";
            bindings = <&mo>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <280>;
            hold-trigger-key-positions = <32>;
            quick-tap-ms = <175>;
            require-prior-idle-ms = <150>;
            hold-trigger-on-release;
        };
    };

    combos {
        compatible = "zmk,combos";

        kha {
            bindings = <&kp RU_CYRILLIC_SHCHA>;
            key-positions = <7 8>;
            layers = <1>;
        };

        hrdsgn {
            bindings = <&kp RU_CYRILLIC_HARD_SIGN>;
            key-positions = <26 27>;
            layers = <1>;
        };

        ru-io {
            bindings = <&kp RU_CYRILLIC_IO>;
            key-positions = <3 4>;
            layers = <1>;
        };

        declar {
            bindings = <&declar>;
            key-positions = <16 17>;
        };

        not_eqv {
            bindings = <&not_equal>;
            key-positions = <17 18>;
        };

        les_eqv {
            bindings = <&les_eql>;
            key-positions = <12 11>;
        };

        grt_eqv {
            bindings = <&grt_eql>;
            key-positions = <12 13>;
        };

        chan {
            bindings = <&chan>;
            key-positions = <27 28>;
        };
    };

    macros {
        to_ru: to_ru {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LS(LC(N2))>;
            label = "TO_RU";
            wait-ms = <0>;
            tap-ms = <30>;
        };

        to_en: to_en {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LS(LC(N1))>;
            label = "TO_EN";
            wait-ms = <0>;
            tap-ms = <30>;
        };

        layer_en: layer_en {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&to 0 &to_en>;
            label = "LAYER_EN";
            wait-ms = <0>;
            tap-ms = <30>;
        };

        layer_ru: layer_ru {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&to 1 &to_ru>;
            label = "LAYER_RU";
            tap-ms = <30>;
            wait-ms = <0>;
        };

        en: en {
            compatible = "zmk,behavior-macro-one-param";
            #binding-cells = <1>;
            bindings =
                <&to_en>,
                <&macro_press>,
                <&macro_param_1to1 &kp MACRO_PLACEHOLDER>,
                <&macro_pause_for_release>,
                <&macro_release>,
                <&macro_param_1to1 &kp MACRO_PLACEHOLDER>,
                <&macro_tap>,
                <&to_ru>;

            label = "EN";
            wait-ms = <0>;
            tap-ms = <30>;
        };

        declar: declar {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp COLON &kp EQUAL &kp SPACE>;
            label = "DECLAR";
            tap-ms = <30>;
        };

        equal: equal {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp EQUAL &kp EQUAL &kp SPACE>;
            label = "EQUAL";
            tap-ms = <30>;
        };

        not_equal: not_equal {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp EXCL &kp EQUAL &kp SPACE>;
            label = "NOT_EQUAL";
            tap-ms = <30>;
        };

        log_and: and {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp AMPS &kp AMPS &kp SPACE>;
            label = "AND";
            tap-ms = <30>;
        };

        log_or: log_or {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp PIPE &kp PIPE &kp SPACE>;
            label = "LOG_OR";
            tap-ms = <30>;
        };

        comment: coment {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp SLASH &kp SLASH &kp SPACE>;
            label = "COMENT";
        };

        grt_eql: grt_eql {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp GREATER_THAN &kp EQUAL &kp SPACE>;
            label = "GRT_EQL";
            tap-ms = <30>;
        };

        les_eql: les_eql {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LESS_THAN &kp EQUAL &kp SPACE>;
            label = "LES_EQL";
            tap-ms = <30>;
        };

        pls_eql: pls_eql {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp PLUS &kp EQUAL &kp SPACE>;
            label = "PLS_EQL";
            tap-ms = <30>;
        };

        min_eql: min_eql {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp MINUS &kp EQUAL &kp SPACE>;
            label = "MIN_EQL";
            tap-ms = <30>;
        };

        thr_dots: thr_dots {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp DOT &kp DOT &kp DOT>;
            label = "THR_DOTS";
            tap-ms = <30>;
        };

        chan: chan {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LESS_THAN &kp MINUS>;
            label = "CHAN";
            tap-ms = <30>;
        };

        lpar: lpar {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LPAR &kp DQT>;
            label = "LPAR";
        };
    };

    keymap {
        compatible = "zmk,keymap";

        en {
            bindings = <
&kp Q        &kp W        &kp E         &kp R         &kp T      &kp Y      &kp U         &kp I         &kp O        &kp P
&hml LGUI A  &hml LALT S  &hml LCTRL D  &hml LSHFT F  &kp G      &kp H      &hmr RSHFT J  &hmr LCTRL K  &hmr LALT L  &hmr RGUI SEMICOLON
&kp Z        &kp X        &kp C         &kp V         &kp B      &kp N      &kp M         &kp COMMA     &kp DOT      &kp SQT
                                        &numl 4 ESC   &kp SPACE  &kp ENTER  &numl 2 TAB
            >;

            display-name = "Base";
        };

        ru {
            bindings = <
&kp RU_CYRILLIC_SHORT_I   &kp RU_CYRILLIC_TSE         &kp RU_CYRILLIC_U          &kp RU_CYRILLIC_KA         &kp RU_CYRILLIC_IE  &kp RU_CYRILLIC_EN  &kp RU_CYRILLIC_GHE        &kp RU_CYRILLIC_SHA        &kp RU_CYRILLIC_ZE        &kp RU_CYRILLIC_HA
&hml LGUI RU_CYRILLIC_EF  &hml LALT RU_CYRILLIC_YERU  &hml LCTRL RU_CYRILLIC_VE  &hml LSHIFT RU_CYRILLIC_A  &kp RU_CYRILLIC_PE  &kp RU_CYRILLIC_ER  &hmr RSHFT RU_CYRILLIC_O   &hmr RCTRL RU_CYRILLIC_EL  &hmr LALT RU_CYRILLIC_DE  &hmr RGUI RU_CYRILLIC_ZHE
&kp RU_CYRILLIC_YA        &kp RU_CYRILLIC_CHE         &kp RU_CYRILLIC_ES         &kp RU_CYRILLIC_EM         &kp RU_CYRILLIC_I   &kp RU_CYRILLIC_TE  &kp RU_CYRILLIC_SOFT_SIGN  &kp RU_CYRILLIC_BE         &kp RU_CYRILLIC_YU        &kp RU_CYRILLIC_E
                                                                                 &numl 4 ESC                &kp SPACE           &kp ENTER           &numl 3 TAB
            >;

            display-name = "Ru";
        };

        sym_en {
            display-name = "Symbols";
            bindings = <
&kp TILDE       &kp LT          &kp EQUAL         &kp GT           &kp GRAVE   &kp CARET  &kp LBKT         &kp UNDER       &kp RBKT        &kp AMPS
&hml LGUI BSLH  &hml LALT LPAR  &hml LSHFT MINUS  &hml LCTRL RPAR  &kp PLUS    &kp PRCNT  &hmr RCTRL LBRC  &hmr RSHFT DQT  &hmr LALT RBRC  &hmr RGUI EXCL
&kp HASH        &kp APOS        &kp ASTRK         &kp FSLH         &kp DOLLAR  &kp AT     &kp PIPE         &kp SEMI        &kp COLON       &kp QMARK
                                                  &mo 5            &none       &trans     &trans
            >;
        };

        sym_ru {
            bindings = <
&en TILDE               &en LT          &kp EQUAL         &en GT           &en GRAVE   &en CARET  &en LBKT  &kp UNDER           &en RBKT    &en AMPS
&hml LGUI RU_BACKSLASH  &hml LALT LPAR  &hml LCTRL MINUS  &hml LSHFT RPAR  &kp PLUS    &kp PRCNT  &en LBRC  &hmr RSHFT RU_SEMI  &en RBRC    &hmr RGUI EXCL
&en HASH                &kp RU_COLON    &kp STAR          &kp RU_FSLH      &en DOLLAR  &en AT     &en PIPE  &kp RU_COMMA        &kp RU_DOT  &kp RU_QMARK
                                                          &mo 5            &trans      &trans     &none
            >;

            display-name = "Symbols";
        };

        nav {
            bindings = <
&kp NUMBER_1   &kp N2    &kp N3     &kp N4               &kp N5     &kp N6             &kp N7          &kp N8        &kp N9           &kp N0
&hml LGUI ESC  &kp LALT  &kp LCTRL  &kp LSHFT            &kp ENTER  &kp LEFT           &kp DOWN_ARROW  &kp UP_ARROW  &kp RIGHT_ARROW  &none
&layer_en      &none     &tog 6     &kp LS(PRINTSCREEN)  &kp TAB    &kp END            &kp PAGE_DOWN   &kp PAGE_UP   &kp HOME         &layer_ru
                                    &none                &none      &kp LA(BACKSPACE)  &numl 5 DEL
            >;

            display-name = "Navigation";
        };

        adj {
            bindings = <
&bootloader   &kp F1        &kp F2         &kp F3         &kp F4   &bt BT_SEL 0  &bt BT_SEL 1         &bt BT_SEL 2       &bt BT_SEL 3        &bt BT_CLR
&kp LGUI      &hml LALT F5  &hml LSHFT F6  &hml LCTRL F7  &kp F8   &none         &hmr RCTRL C_VOL_DN  &hmr RSHFT C_MUTE  &hmr LALT C_VOL_UP  &kp RGUI
&out OUT_BLE  &kp F9        &kp F10        &kp F11        &kp F12  &none         &kp C_PREV           &kp C_PP           &kp C_NEXT          &out OUT_USB
                                           &trans         &trans   &trans        &none
            >;

            display-name = "Adjust";
        };

        gam {
            display-name = "Game";
            bindings = <
&kp TAB    &kp Q  &kp W  &kp E  &kp R      &none   &none            &kp UP_ARROW    &none            &kp TAB
&kp LSHFT  &kp A  &kp S  &kp D  &kp F      &none   &kp LEFT_ARROW   &kp DOWN_ARROW  &kp RIGHT_ARROW  &kp RIGHT_SHIFT
&kp LCTRL  &kp Z  &kp X  &kp C  &kp V      &none   &none            &none           &none            &kp RCTRL
                         &mo 7  &kp SPACE  &tog 6  &kp PRINTSCREEN
            >;
        };

        gfn {
            display-name = "Gfn";
            bindings = <
&kp ESC       &kp N1  &kp N2  &kp N3  &kp N4  &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_CLR
&kp LEFT_ALT  &kp N5  &kp N6  &kp N7  &kp N8  &none         &none         &none         &none         &none
&kp G         &kp J   &kp I   &kp M   &kp T   &none         &none         &none         &none         &bootloader
                              &none   &none   &kp ENTER     &none
            >;
        };
    };
};
