#include "keys_ru.h"
#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

&mt {
    quick-tap-ms = <200>;
    flavor = "tap-preferred";
    require-prior-idle-ms = <125>;
};

/ {
    behaviors {
        hml: home_row_mod_left {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            flavor = "balanced";
            require-prior-idle-ms = <150>;
            tapping-term-ms = <280>;
            quick-tap-ms = <175>;
            bindings = <&kp>, <&kp>;

            hold-trigger-key-positions = <5 6 7 8 9 15 16 17 18 19 25 26 27 28 29 33 34 35>;
            hold-trigger-on-release;
        };

        hmr: home_row_mod_right {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            flavor = "balanced";
            require-prior-idle-ms = <150>;
            tapping-term-ms = <280>;
            quick-tap-ms = <175>;
            bindings = <&kp>, <&kp>;

            hold-trigger-key-positions = <0 1 2 3 4 10 11 12 13 14 20 21 22 23 24 30 31>;
            hold-trigger-on-release;
        };

        m_hold_mod_press_key: m_hold_mod_press_key {
            compatible = "zmk,behavior-macro-two-param";
            #binding-cells = <2>;
            wait-ms = <0>;
            tap-ms = <0>;
            bindings =
                <&macro_press
                    &macro_param_1to1 &kp PARAM_1
                &macro_tap
                    &macro_param_2to1 &kp PARAM_2>;
        };

        swapper_mac: swapper_mac {
            compatible = "zmk,behavior-mod-morph";
            #binding-cells = <0>;
            bindings = <&m_hold_mod_press_key LGUI TAB>, <&kp TAB>;
            mods = <(MOD_LGUI)>;
            keep-mods = <(MOD_LGUI)>;
            label = "SWAPPER_MAC";
        };

        swapper_mac_prev: swapper_mac_prev {
            compatible = "zmk,behavior-mod-morph";
            #binding-cells = <0>;
            bindings = <&m_hold_mod_press_key LGUI LS(TAB)>, <&kp LS(TAB)>;
            mods = <(MOD_LGUI)>;
            keep-mods = <(MOD_LGUI)>;
            label = "SWAPPER_MAC_PREV";
        };

        numl: numl {
            compatible = "zmk,behavior-hold-tap";
            label = "NUML";
            bindings = <&mo>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <280>;
            hold-trigger-key-positions = <32>;
            quick-tap-ms = <175>;
            require-prior-idle-ms = <150>;
            hold-trigger-on-release;
        };

        mmv {
            acceleration-exponent = <1>;      // 1
            time-to-max-speed-ms = <300>;    // 40
            delay-ms = <0>;                   // 0
        };

        msc {
            acceleration-exponent = <0>;      // 0
            time-to-max-speed-ms = <40>;      // 500
            delay-ms = <0>;                   // 10
        };
    };

    combos {
        compatible = "zmk,combos";

        kha {
            bindings = <&kp RU_CYRILLIC_SHCHA>;
            key-positions = <7 8>;
            layers = <1>;
        };

        hrdsgn {
            bindings = <&kp RU_CYRILLIC_HARD_SIGN>;
            key-positions = <26 27>;
            layers = <1>;
        };

        cmb_caps {
            bindings = <&kp CAPS>;
            key-positions = <13 16>;
            layers = <0 1>;
        };

        layer_ru {
            bindings = <&layer_ru>;
            key-positions = <28 29>;
            layers = <0>;
        };

        layer_en {
            bindings = <&layer_en>;
            key-positions = <28 29>;
            layers = <1>;
        };
    };

    macros {
        to_ru: to_ru {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LS(LC(N2))>;
            label = "TO_RU";
            wait-ms = <0>;
            tap-ms = <30>;
        };

        to_en: to_en {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LS(LC(N1))>;
            label = "TO_EN";
            wait-ms = <0>;
            tap-ms = <30>;
        };

        layer_en: layer_en {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&to 0 &to_en>;
            label = "LAYER_EN";
            wait-ms = <0>;
            tap-ms = <30>;
        };

        layer_ru: layer_ru {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&to 1 &to_ru>;
            label = "LAYER_RU";
            tap-ms = <30>;
            wait-ms = <0>;
        };

        en: en {
            compatible = "zmk,behavior-macro-one-param";
            #binding-cells = <1>;
            bindings =
                <&to_en>,
                <&macro_press>,
                <&macro_param_1to1 &kp MACRO_PLACEHOLDER>,
                <&macro_pause_for_release>,
                <&macro_release>,
                <&macro_param_1to1 &kp MACRO_PLACEHOLDER>,
                <&macro_tap>,
                <&to_ru>;

            label = "EN";
            wait-ms = <0>;
            tap-ms = <30>;
        };

        declar: declar {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp COLON &kp EQUAL &kp SPACE>;
            label = "DECLAR";
            tap-ms = <30>;
        };

        equal: equal {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp EQUAL &kp EQUAL &kp SPACE>;
            label = "EQUAL";
            tap-ms = <30>;
        };

        not_equal: not_equal {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp EXCL &kp EQUAL &kp SPACE>;
            label = "NOT_EQUAL";
            tap-ms = <30>;
        };

        log_and: and {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp AMPS &kp AMPS &kp SPACE>;
            label = "AND";
            tap-ms = <30>;
        };

        log_or: log_or {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp PIPE &kp PIPE &kp SPACE>;
            label = "LOG_OR";
            tap-ms = <30>;
        };

        comment: coment {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp SLASH &kp SLASH &kp SPACE>;
            label = "COMENT";
        };

        grt_eql: grt_eql {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp GREATER_THAN &kp EQUAL &kp SPACE>;
            label = "GRT_EQL";
            tap-ms = <30>;
        };

        les_eql: les_eql {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LESS_THAN &kp EQUAL &kp SPACE>;
            label = "LES_EQL";
            tap-ms = <30>;
        };

        pls_eql: pls_eql {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp PLUS &kp EQUAL &kp SPACE>;
            label = "PLS_EQL";
            tap-ms = <30>;
        };

        min_eql: min_eql {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp MINUS &kp EQUAL &kp SPACE>;
            label = "MIN_EQL";
            tap-ms = <30>;
        };

        thr_dots: thr_dots {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp DOT &kp DOT &kp DOT>;
            label = "THR_DOTS";
            tap-ms = <30>;
        };

        chan: chan {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LESS_THAN &kp MINUS>;
            label = "CHAN";
            tap-ms = <30>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        en {
            bindings = <
&kp Q        &kp W        &kp E         &kp R         &kp T      &kp Y          &kp U         &kp I         &kp O        &kp P
&hml LGUI A  &hml LALT S  &hml LCTRL D  &hml LSHFT F  &kp G      &kp H          &hmr LSHFT J  &hmr LCTRL K  &hmr LALT L  &hmr RGUI SEMICOLON
&kp Z        &kp X        &kp C         &kp V         &kp B      &kp N          &kp M         &kp COMMA     &kp DOT      &kp SLASH
                                        &mo 4         &kp SPACE  &numl 8 ENTER  &numl 2 TAB
            >;

            display-name = "Base";
        };

        ru {
            bindings = <
&kp RU_CYRILLIC_SHORT_I   &kp RU_CYRILLIC_TSE         &kp RU_CYRILLIC_U          &kp RU_CYRILLIC_KA         &kp RU_CYRILLIC_IE  &kp RU_CYRILLIC_EN  &kp RU_CYRILLIC_GHE        &kp RU_CYRILLIC_SHA        &kp RU_CYRILLIC_ZE        &kp RU_CYRILLIC_HA
&hml LGUI RU_CYRILLIC_EF  &hml LALT RU_CYRILLIC_YERU  &hml LCTRL RU_CYRILLIC_VE  &hml LSHIFT RU_CYRILLIC_A  &kp RU_CYRILLIC_PE  &kp RU_CYRILLIC_ER  &hmr RSHFT RU_CYRILLIC_O   &hmr RCTRL RU_CYRILLIC_EL  &hmr LALT RU_CYRILLIC_DE  &hmr RGUI RU_CYRILLIC_ZHE
&kp RU_CYRILLIC_YA        &kp RU_CYRILLIC_CHE         &kp RU_CYRILLIC_ES         &kp RU_CYRILLIC_EM         &kp RU_CYRILLIC_I   &kp RU_CYRILLIC_TE  &kp RU_CYRILLIC_SOFT_SIGN  &kp RU_CYRILLIC_BE         &kp RU_CYRILLIC_YU        &kp RU_CYRILLIC_E
                                                                                 &mo 4                      &kp SPACE           &numl 8 ENTER       &numl 3 TAB
            >;

            display-name = "Ru";
        };

        sym_en {
            display-name = "Symbols";
            bindings = <
&kp TILDE       &kp LT          &kp EQUAL         &kp GT           &kp GRAVE  &kp CARET  &kp LBKT  &kp UNDER        &kp RBKT  &kp DLLR
&hml LGUI BSLH  &hml LALT LPAR  &hml LCTRL MINUS  &hml LSHFT RPAR  &kp PLUS   &kp PRCNT  &kp LBRC  &hmr RSHFT SEMI  &kp RBRC  &hmr RGUI EXCL
&kp HASH        &kp STAR        &kp RU_COLON      &kp RU_FSLH      &kp AMPS   &kp AT     &kp PIPE  &kp COMMA        &kp DOT   &kp QMARK
                                                  &mo 5            &trans     &trans     &none
            >;
        };

        sym_ru {
            bindings = <
&en TILDE               &en LT          &kp EQUAL         &en GT           &en GRAVE  &en CARET  &en LBKT  &kp UNDER           &en RBKT    &en DLLR
&hml LGUI RU_BACKSLASH  &hml LALT LPAR  &hml LCTRL MINUS  &hml LSHFT RPAR  &kp PLUS   &kp PRCNT  &en LBRC  &hmr RSHFT RU_SEMI  &en RBRC    &hmr RGUI EXCL
&en HASH                &kp STAR        &kp RU_COLON      &kp RU_FSLH      &en AMPS   &en AT     &en PIPE  &kp RU_COMMA        &kp RU_DOT  &kp RU_QMARK
                                                          &mo 5            &trans     &trans     &none
            >;

            display-name = "Symbols";
        };

        nav {
            bindings = <
&kp LS(LC(TAB))     &kp LC(TAB)          &none      &none                &none      &kp C_VOLUME_DOWN  &kp K_MUTE             &kp C_VOLUME_UP      &kp BACKSPACE          &kp DELETE
&hml LGUI ESC       &kp LALT             &kp LCTRL  &kp LSHFT            &kp ENTER  &kp LEFT           &hmr RSHFT DOWN_ARROW  &hmr RCTRL UP_ARROW  &hmr LALT RIGHT_ARROW  &hmr RGUI ESC
&kp LC(LEFT_ARROW)  &kp LC(RIGHT_ARROW)  &tog 6     &kp LS(PRINTSCREEN)  &kp TAB    &kp END            &kp PAGE_DOWN          &kp PAGE_UP          &kp HOME               &none
                                                    &none                &trans     &kp LA(SPACE)      &mo 5
            >;

            display-name = "Navigation";
        };

        adj {
            bindings = <
&none        &kp F1        &kp F2         &kp F3         &kp F4   &kp SLASH  &kp N7  &kp N8        &kp N9  &kp ASTRK
&kp LGUI     &hml LALT F5  &hml LSHFT F6  &hml LCTRL F7  &kp F8   &kp EQUAL  &kp N4  &kp N5        &kp N6  &kp PLUS
&bootloader  &kp F9        &kp F10        &kp F11        &kp F12  &kp N0     &kp N1  &kp NUMBER_2  &kp N3  &kp MINUS
                                          &trans         &trans   &trans     &trans
            >;

            display-name = "Adjust";
        };

        gam {
            display-name = "Game";
            bindings = <
&kp TAB    &kp Q  &kp W  &kp E  &kp R      &none   &none            &kp UP_ARROW    &none            &kp TAB
&kp LSHFT  &kp A  &kp S  &kp D  &kp F      &none   &kp LEFT_ARROW   &kp DOWN_ARROW  &kp RIGHT_ARROW  &kp RIGHT_SHIFT
&kp LCTRL  &kp Z  &kp X  &kp C  &kp V      &none   &none            &none           &none            &kp RCTRL
                         &mo 7  &kp SPACE  &tog 6  &kp PRINTSCREEN
            >;
        };

        gfn {
            display-name = "Gfn";
            bindings = <
&kp ESC       &kp N1  &kp N2  &kp N3  &kp N4  &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_CLR
&kp LEFT_ALT  &kp N5  &kp N6  &kp N7  &kp N8  &none         &none         &none         &none         &none
&kp G         &kp J   &kp I   &kp M   &kp T   &none         &none         &none         &none         &bootloader
                              &none   &none   &kp ENTER     &none
            >;
        };

        macros {
            bindings = <
&none     &none     &none       &none      &none      &none   &none  &none  &none  &none
&les_eql  &grt_eql  &not_equal  &equal     &chan      &none   &none  &none  &none  &none
&min_eql  &pls_eql  &log_or     &log_and   &thr_dots  &none   &none  &none  &none  &comment
                                &kp UNDER  &declar    &trans  &none
            >;

            display-name = "Macro";
        };
    };
};
