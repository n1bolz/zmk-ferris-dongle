// Copyright (c) 2022 The ZMK Contributors
// SPDX-License-Identifier: MIT

#define ZMK_POINTING_DEFAULT_MOVE_VAL 2500  // 600
#define ZMK_POINTING_DEFAULT_SCRL_VAL 20    // 10

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/pointing.h>

#define MAC 0
#define WIN 1
#define RIG 2
#define LEF 3
#define TRI 4
#define MOUSE 5

// https: //zmk.dev/docs/development/hardware-integration/soft-off-setup?advanced-methods=wakeup&kscan-type=dkscan

/ {
    keys {
        compatible = "gpio-keys";

        soft_off_gpio_key: soft_off_gpio_key { gpios = <&gpio1 6 (GPIO_ACTIVE_LOW | GPIO_PULL_UP)>; };
    };

    wakeup_scan: wakeup_scan {
        compatible = "zmk,kscan-gpio-direct";
        input-keys = <&soft_off_gpio_key>;
        wakeup-source;
    };

    side_band_behavior_triggers: side_band_behavior_triggers {
        compatible = "zmk,kscan-sideband-behaviors";
        kscan = <&wakeup_scan>;
        auto-enable;
        wakeup-source;
    };

    soft_off_wakers {
        compatible = "zmk,soft-off-wakeup-sources";
        wakeup-sources = <&wakeup_scan>;
    };
};

/ {
    behaviors {
        ht: hold_tap {
            label = "hold_tap";
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            flavor = "balanced";
            tapping-term-ms = <200>;
            quick-tap-ms = <150>;
            global-quick-tap;
            bindings = <&kp>, <&kp>;
        };

        tm: tm {
            compatible = "zmk,behavior-hold-tap";
            label = "momentary_toggle";
            #binding-cells = <2>;
            flavor = "balanced";
            tapping-term-ms = <200>;
            quick-tap-ms = <150>;
            global-quick-tap;
            bindings = <&mo>, <&tog>;
        };

        quote_td: quote_td {
            compatible = "zmk,behavior-tap-dance";
            label = "QUOTE_TD";
            #binding-cells = <0>;
            bindings = <&kp SINGLE_QUOTE>, <&kp DOUBLE_QUOTES>, <&kp GRAVE>;

            tapping-term-ms = <200>;
        };

        mmv {
            acceleration-exponent = <1>;      // 1
            time-to-max-speed-ms = <300>;    // 40
            delay-ms = <0>;                   // 0
        };

        msc {
            acceleration-exponent = <0>;      // 0
            time-to-max-speed-ms = <40>;      // 500
            delay-ms = <0>;                   // 10
        };
    };

    conditional_layers {
        compatible = "zmk,conditional-layers";

        tri_layer {
            if-layers = <1 3>;
            then-layer = <4>;
        };
    };

    macros {
        str_and: str_and {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp AMPS &kp AMPS>;
            label = "STR_AND";
        };

        str_or: str_or {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp PIPE &kp PIPE>;
            label = "STR_OR";
        };

        str_dbl_slash: str_double_slash {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp FSLH &kp FSLH>;
            label = "STR_DOUBLE_SLASH";
        };

        str_dbl_colon: str_double_colon {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp COLON &kp COLON>;
            label = "STR_DOUBLE_COLON";
        };

        str_plus_eq: str_plus_eq {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp PLUS &kp EQUAL>;
            label = "STR_PLUS_EQ";
        };

        str_min_eq: str_min_eq {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp MINUS &kp EQUAL>;
            label = "STR_MIN_EQ";
        };

        str_diff: str_diff {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp EXCL &kp EQUAL>;
            label = "STR_DIFF";
        };

        str_strict_diff: str_strict_diff {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp EXCL &kp EQUAL &kp EQUAL>;
            label = "STR_STRICT_DIFF";
        };

        str_opt: str_option {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp QMARK &kp QMARK>;
            label = "STR_OPTION";
        };

        str_dbl_paren: str_dbl_paren {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LPAR &kp RPAR>;
            label = "STR_DBL_PAREN";
        };

        str_eq: str_eq {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp EQUAL &kp EQUAL>;
            label = "STR_EQ";
        };

        str_strict_eq: str_strict_eq {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp EQUAL &kp EQUAL &kp EQUAL>;
            label = "STR_STRICT_EQ";
        };

        str_less_eq: str_less_eq {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LT &kp EQUAL>;
            label = "STR_LESS_EQ";
        };

        str_greater_eq: str_greater_eq {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp GT &kp EQUAL>;
            label = "STR_GREATER_EQ";
        };

        str_arrow: str_arrow {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp MINUS &kp GT>;
            label = "STR_ARROW";
        };

        str_fat_arrow: str_fat_arrow {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp EQUAL &kp GT>;
            label = "STR_FAT_ARROW";
        };

        triple_dots: triple_dots {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp DOT &kp DOT &kp DOT>;
            label = "TRIPLE_DOTS";
        };

        str_dbl_hash: str_dbl_hash {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp POUND &kp POUND>;
            label = "STR_DBL_HASH";
        };
    };

    combos {
        compatible = "zmk,combos";

        semicolon {
            bindings = <&kp SEMICOLON>;
            key-positions = <28 27>;
            layers = <0>;
        };

        double_quote {
            bindings = <&kp DOUBLE_QUOTES>;
            key-positions = <26 27>;
            layers = <0>;
        };

        grave {
            bindings = <&kp GRAVE>;
            key-positions = <28 29>;
            layers = <0>;
        };

        single_quote {
            bindings = <&kp SINGLE_QUOTE>;
            key-positions = <18 19>;
            layers = <0>;
        };

        caps_word {
            bindings = <&caps_word>;
            key-positions = <32 31>;
            layers = <0>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            display-name = "DEFAULT";
            bindings = <
&kp Q  &kp W       &kp E       &kp R           &kp T        &kp Y                  &kp U        &kp I       &kp O       &kp P
&kp A  &ht LGUI S  &ht LALT D  &ht LCTRL F     &kp G        &kp H                  &ht RCTRL J  &ht RALT K  &ht RGUI L  &kp BACKSPACE
&kp Z  &kp X       &kp C       &kp V           &kp B        &kp N                  &kp M        &kp COMMA   &kp DOT     &kp SLASH
                               &lt 1 CAPSLOCK  &lt 2 SPACE  &ht LEFT_SHIFT RETURN  &tm 3 5
            >;
        };

        symbols_layer {
            display-name = "SYMBOLS";
            bindings = <
&kp LBKT         &kp RBKT       &kp LEFT_BRACE        &kp RIGHT_BRACE        &kp CARET  &kp PLUS   &kp N1  &kp N2  &kp N3  &kp MINUS
&kp STAR         &kp BACKSLASH  &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS  &kp PIPE   &kp EQUAL  &kp N4  &kp N5  &kp N6  &kp UNDERSCORE
&kp EXCLAMATION  &kp TILDE      &kp HASH              &kp PERCENT            &kp AT     &kp AMPS   &kp N7  &kp N8  &kp N9  &kp DOLLAR
                                                      &trans                 &trans     &kp COLON  &kp N0
            >;
        };

        symbols_extra_layer {
            display-name = "SYMBOLS_EXTRA";
            bindings = <
&str_dbl_paren  &str_dbl_slash  &str_dbl_colon  &str_min_eq   &str_strict_diff  &str_strict_eq  &str_less_eq   &str_greater_eq   &str_arrow      &str_dbl_hash
&str_and        &str_or         &str_opt        &str_plus_eq  &str_diff         &str_eq         &kp LESS_THAN  &kp GREATER_THAN  &str_fat_arrow  &triple_dots
&trans          &trans          &trans          &trans        &trans            &trans          &trans         &trans            &trans          &trans
                                            &trans        &trans            &trans          &trans
            >;
        };

        edit_layer {
            display-name = "EDIT";
            bindings = <
&kp ESC  &trans  &trans  &trans  &trans  &trans    &trans     &trans     &trans     &trans
&kp TAB  &trans  &trans  &trans  &trans  &kp LEFT  &kp DOWN   &kp UP     &kp RIGHT  &kp DELETE
&trans   &trans  &trans  &trans  &trans  &kp HOME  &kp PG_DN  &kp PG_UP  &kp END    &kp INS
                         &trans  &trans  &trans    &trans
            >;
        };

        func_layer {
            display-name = "FUNC";
            bindings = <
&bootloader     &kp C_VOLUME_DOWN  &kp C_VOL_UP  &kp C_BRIGHTNESS_DEC  &kp C_BRI_INC     &kp K_SLEEP      &kp F1  &kp F2  &kp F3  &kp F10
&bt BT_CLR      &bt BT_PRV         &bt BT_NXT    &kp K_PREV            &kp K_NEXT        &kp K_LOCK       &kp F4  &kp F5  &kp F6  &kp F11
&studio_unlock  &bt BT_SEL 0       &bt BT_SEL 1  &kp K_MUTE            &kp K_PLAY_PAUSE  &kp PRINTSCREEN  &kp F7  &kp F8  &kp F9  &kp F12
                                                 &trans                &trans            &trans           &trans
            >;
        };

        mouse {
            display-name = "MOUSE";
            bindings = <
&trans  &trans  &trans     &trans     &trans  &trans          &trans          &trans        &trans           &trans
&trans  &trans  &mkp RCLK  &mkp LCLK  &trans  &mmv MOVE_LEFT  &mmv MOVE_DOWN  &mmv MOVE_UP  &mmv MOVE_RIGHT  &trans
&trans  &trans  &trans     &trans     &trans  &msc SCRL_LEFT  &msc SCRL_DOWN  &msc SCRL_UP  &msc SCRL_RIGHT  &trans
                           &trans     &trans  &trans          &tog 5
            >;
        };
    };
};
