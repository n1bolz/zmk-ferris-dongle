// Copyright (c) 2022 The ZMK Contributors
// SPDX-License-Identifier: MIT

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

// Layer definitions

#define BSE 0
#define MDA 1
#define NAV 2
#define SYM 3
#define NUM 4
#define FUN 5

/ {
    behaviors {
        hmr: hmr {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            flavor = "balanced";
            tapping-term-ms = <225>;
            quick-tap-ms = <175>;
            require-prior-idle-ms = <150>;
            bindings = <&kp>, <&kp>;

            hold-trigger-key-positions = <0 24 23 22 21 20 0 1 2 3 4 10 11 12 13 14 31 30 33 32>;
            hold-trigger-on-release;
            label = "Home row mods right";
        };

        hml: hml {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            flavor = "balanced";
            tapping-term-ms = <225>;
            quick-tap-ms = <175>;
            require-prior-idle-ms = <150>;
            bindings = <&kp>, <&kp>;

            hold-trigger-on-release;
            hold-trigger-key-positions = <5 6 7 8 9 15 16 17 18 19 25 26 27 28 29 32 33 30 31>;
            label = "Home row mods left";
        };
    };

    combos {
        compatible = "zmk,combos";

        esc_combo {
            timeout-ms = <300>;
            key-positions = <30 31>;
            bindings = <&lt MDA ESC>;
            layers = <0>;
        };

        del_combo {
            timeout-ms = <300>;
            key-positions = <32 33>;
            bindings = <&lt FUN DEL>;
            layers = <0>;
        };

        cced_combo {
            bindings = <&cced_macro>;
            key-positions = <12 22>;
            layers = <0>;
        };

        atil_combo {
            bindings = <&atil_macro>;
            key-positions = <10 20>;
            layers = <0>;
        };

        ecir_combo {
            bindings = <&ecir_macro>;
            key-positions = <2 12>;
            layers = <0>;
        };

        ocir_combo {
            bindings = <&ocir_macro>;
            key-positions = <8 18>;
            layers = <0>;
        };

        otil_combo {
            bindings = <&otil_macro>;
            key-positions = <18 28>;
            layers = <0>;
        };

        acir_combo {
            bindings = <&acir_macro>;
            key-positions = <0 10>;
            layers = <0>;
        };
    };

    macros {
        cced_macro: cced_macro {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp SQT &kp C>;
            label = "CCED_MACRO";
        };

        atil_macro: atil_macro {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp TILDE &kp A>;
            label = "ATIL_MACRO";
        };

        ecir_macro: ecir_macro {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp CARET &kp E>;
            label = "ECIR_MACRO";
        };

        ocir_macro: ocir_macro {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp CARET &kp O>;
            label = "OCIR_MACRO";
        };

        otil_macro: otil_macro {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp TILDE &kp O>;
            label = "OTIL_MACRO";
        };

        acir_macro: acir_macro {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp CARET &kp A>;
            label = "ACIR_MACRO";
        };

        altf4_macro: altf4_macro {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&sk LEFT_ALT &kp F4>;
            label = "ALTF4_MACRO";
        };
    };

    keymap {
        compatible = "zmk,keymap";

        base_layer {
            bindings = <
&kp Q        &kp W        &kp E         &kp R          &kp T        &kp Y        &kp U         &kp I         &kp O        &kp P
&hml LGUI A  &hml LALT S  &hml LCTRL D  &hml LSHFT F   &kp G        &kp H        &hmr LSHFT J  &hmr LCTRL K  &hmr LALT L  &hmr LGUI SQT
&kp Z        &kp X        &kp C         &kp V          &kp B        &kp N        &kp M         &kp COMMA     &kp DOT      &kp SLASH
                                        &lt NAV SPACE  &lt 2 TAB    &lt SYM RET  &lt NUM BSPC
            >;
        };

        media_layer {
            bindings = <
&none  &none  &none  &none  &none    &none             &none         &none         &none         &studio_unlock
&none  &none  &none  &none  &none    &kp C_PREV        &kp C_VOL_DN  &kp C_VOL_UP  &kp C_NEXT    &altf4_macro
&none  &none  &none  &none  &none    &bt BT_SEL 0      &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_CLR
                     &none  &none    &kp K_PLAY_PAUSE  &kp C_MUTE
            >;
        };

        nav_layer {
            bindings = <
&none  &none  &none  &none  &none    &none     &none      &none      &none      &none
&none  &none  &none  &none  &none    &kp LEFT  &kp DOWN   &kp UP     &kp RIGHT  &caps_word
&none  &none  &none  &none  &none    &kp HOME  &kp PG_DN  &kp PG_UP  &kp END    &kp INS
                     &none  &none    &kp RET   &kp BSPC
            >;
        };

        sym_layer {
            bindings = <
&kp LBRC   &kp AMPS  &kp ASTRK  &kp LPAR   &kp RBRC     &none  &none  &none  &none  &none
&kp COLON  &kp DLLR  &kp PRCNT  &kp CARET  &kp PLUS     &none  &none  &none  &none  &none
&kp TILDE  &kp EXCL  &kp AT     &kp HASH   &kp PIPE     &none  &none  &none  &none  &none
                                &kp RPAR   &kp UNDER    &none  &none
            >;
        };

        num_layer {
            bindings = <
&kp LBKT   &kp N7  &kp N8  &kp N9  &kp RBKT     &none  &none  &none  &none  &none
&kp SEMI   &kp N4  &kp N5  &kp N6  &kp EQUAL    &none  &none  &none  &none  &none
&kp GRAVE  &kp N1  &kp N2  &kp N3  &kp BSLH     &none  &none  &none  &none  &none
                           &kp N0  &kp MINUS    &none  &none
            >;
        };

        fun_layer {
            bindings = <
&kp F12  &kp F7  &kp F8  &kp F9  &kp PSCRN          &none  &none  &none  &none  &none
&kp F11  &kp F4  &kp F5  &kp F6  &kp SLCK           &none  &none  &none  &none  &none
&kp F10  &kp F1  &kp F2  &kp F3  &kp PAUSE_BREAK    &none  &none  &none  &none  &none
                         &none   &none              &none  &none
            >;
        };
    };
};
